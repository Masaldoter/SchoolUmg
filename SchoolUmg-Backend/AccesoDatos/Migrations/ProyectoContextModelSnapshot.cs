// <auto-generated />
using AccesoDatos.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    partial class ProyectoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccesoDatos.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dni");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__alumno__3213E83F3F0168AC");

                    b.HasIndex(new[] { "Email" }, "UQ__alumno__AB6E61645632E201")
                        .IsUnique();

                    b.HasIndex(new[] { "Dni" }, "UQ__alumno__D87608A7B7798625")
                        .IsUnique();

                    b.ToTable("alumno", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.AlumnosPorAsignatura", b =>
                {
                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int")
                        .HasColumnName("idAsignatura");

                    b.Property<string>("NombreAsignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreAsignatura");

                    b.Property<int>("TotalAlumnos")
                        .HasColumnType("int")
                        .HasColumnName("totalAlumnos");

                    b.ToTable((string)null);

                    b.ToView("vw_AlumnosPorAsignatura", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Profesor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profesor");

                    b.HasKey("Id")
                        .HasName("PK__asignatu__3213E83F9CC516AC");

                    b.HasIndex(new[] { "Profesor" }, "IX_asignatura_profesor");

                    b.ToTable("asignatura", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int")
                        .HasColumnName("matriculaId");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(4, 2)")
                        .HasColumnName("nota");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int")
                        .HasColumnName("porcentaje");

                    b.HasKey("Id")
                        .HasName("PK__califica__3213E83F5FA5433E");

                    b.HasIndex(new[] { "MatriculaId" }, "IX_calificacion_matricula");

                    b.ToTable("calificacion", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.DistribucionCalificaciones", b =>
                {
                    b.Property<int>("AlumnoID")
                        .HasColumnType("int")
                        .HasColumnName("AlumnoId");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int")
                        .HasColumnName("MatriculaId");

                    b.Property<string>("NombreAlumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NombreAlumno");

                    b.Property<decimal>("NotaFinal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NotaFinal");

                    b.ToTable((string)null);

                    b.ToView("vw_DistribucionCalificaciones", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int")
                        .HasColumnName("alumnoId");

                    b.Property<int>("AsignaturaId")
                        .HasColumnType("int")
                        .HasColumnName("asignaturaId");

                    b.HasKey("Id")
                        .HasName("PK__matricul__3213E83FAD0A910E");

                    b.HasIndex(new[] { "AlumnoId" }, "IX_matricula_alumno");

                    b.HasIndex(new[] { "AsignaturaId" }, "IX_matricula_asignatura");

                    b.HasIndex(new[] { "AlumnoId", "AsignaturaId" }, "UQ_matricula")
                        .IsUnique();

                    b.ToTable("matricula", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Profesor", b =>
                {
                    b.Property<string>("Usuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pass");

                    b.HasKey("Usuario")
                        .HasName("PK__profesor__9AFF8FC762B5F438");

                    b.HasIndex(new[] { "Email" }, "UQ__profesor__AB6E616453C9ACF2")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("profesor", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Asignatura", b =>
                {
                    b.HasOne("AccesoDatos.Models.Profesor", "ProfesorNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("Profesor")
                        .HasConstraintName("FK_asignatura_profesor");

                    b.Navigation("ProfesorNavigation");
                });

            modelBuilder.Entity("AccesoDatos.Models.Calificacion", b =>
                {
                    b.HasOne("AccesoDatos.Models.Matricula", "Matricula")
                        .WithMany("Calificacions")
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_calificacion_matricula");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("AccesoDatos.Models.Matricula", b =>
                {
                    b.HasOne("AccesoDatos.Models.Alumno", "Alumno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_matricula_alumno");

                    b.HasOne("AccesoDatos.Models.Asignatura", "Asignatura")
                        .WithMany("Matriculas")
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_matricula_asignatura");

                    b.Navigation("Alumno");

                    b.Navigation("Asignatura");
                });

            modelBuilder.Entity("AccesoDatos.Models.Alumno", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("AccesoDatos.Models.Asignatura", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("AccesoDatos.Models.Matricula", b =>
                {
                    b.Navigation("Calificacions");
                });

            modelBuilder.Entity("AccesoDatos.Models.Profesor", b =>
                {
                    b.Navigation("Asignaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
