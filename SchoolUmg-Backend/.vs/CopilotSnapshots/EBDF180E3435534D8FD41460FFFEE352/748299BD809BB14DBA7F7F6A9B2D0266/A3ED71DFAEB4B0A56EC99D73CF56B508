    using Microsoft.AspNetCore.Mvc;
using AccesoDatos.Operaciones;
using AccesoDatos.Models;
using System;
using System.Collections.Generic;
using System.Linq;

namespace WebApi.Controllers
{
    [Route("api")]
    [ApiController]
    public class GraficasController : ControllerBase
    {
        private readonly AlumnosPorAsignaturaDAO alumnosPorAsignaturaDAO = new AlumnosPorAsignaturaDAO();
        private readonly DistribucionCalificacionesDAO distribucionDAO = new DistribucionCalificacionesDAO();

        // GET api/getAlumnosPorAsignatura
        [HttpGet("getAlumnosPorAsignatura/{usuarioProfesor}")]
        public IActionResult GetAlumnosPorAsignatura(string usuarioProfesor)
        {
            try
            {
                var result = alumnosPorAsignaturaDAO.ObtenerPorProfesor(usuarioProfesor);
                if (result == null || result.Count == 0)
                    return NotFound("No se encontraron datos de alumnos por asignatura para este profesor.");
                return Ok(result);
            }
            catch (Exception ex)
            {
                return StatusCode(StatusCodes.Status500InternalServerError, $"Error interno del servidor: {ex.Message}");
            }
        }

        // GET api/getDistribucionCalificaciones
        [HttpGet("getDistribucionCalificaciones/{usuarioProfesor}")]
        public IActionResult GetDistribucionCalificaciones(string usuarioProfesor)
        {
            try
            {
                var datos = distribucionDAO.ObtenerPorProfesor(usuarioProfesor);
                if (datos == null || !datos.Any())
                    return NotFound("No se encontraron calificaciones.");

                var distribucion = new
                {
                    A = datos.Count(d => d.NotaFinal >= 90 && d.NotaFinal <= 100),
                    B = datos.Count(d => d.NotaFinal >= 80 && d.NotaFinal < 90),
                    C = datos.Count(d => d.NotaFinal >= 70 && d.NotaFinal < 80),
                    D = datos.Count(d => d.NotaFinal >= 60 && d.NotaFinal < 70),
                    F = datos.Count(d => d.NotaFinal < 60)
                };

                return Ok(distribucion);
            }
            catch (Exception ex)
            {
                return StatusCode(StatusCodes.Status500InternalServerError, $"Error interno del servidor: {ex.Message}");
            }
        }
    }
}
